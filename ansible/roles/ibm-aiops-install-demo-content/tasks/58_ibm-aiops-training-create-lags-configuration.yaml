


- name: 🛰️  START - CREATE LOG GOLDEN SIGNALS ANALYSIS DEFINITIONS
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"




- name: Log
  shell: |
    export MESSAGE="Create LAGS Training Definition"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_ibmaiops_feature.kind}}.log
    echo $currentDate" - "$MESSAGE  >> ../install_{{current_ibmaiops_feature.kind}}.log
  ignore_errors: true

- name: 📣 OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: ibm-aiops-notification
    spec:
      backgroundColor: '#ffd500'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerTop")}}
      text: 'Installing {{current_ibmaiops_feature.kind}} - Create LAGS Training Definition'    
    EOF
  ignore_errors: true
  args:
    executable: /bin/bash
  when: global_config.create_ocp_notifications | default(true) == true  



- name: 🚀 TRAINING CREATE LAGS - CREATE LAGS CONFIGURATION
  shell: |
    set -x
    export ROUTE=""
    pwd

    echo "***************************************************************************************************************************************************"
    echo "   🛠️   Create Analysis Definiton: Log Anomaly Golden Signals"
    export FILE_NAME=create-analysis-LAGS.graphql
    export FILE_PATH="{{role_path}}/templates/training/training-definitions/"
    {{role_path}}/templates/training/scripts/execute-graphql.sh


  register: output_string
  ignore_errors: true
  args:
    executable: /bin/bash
    
- name: 🟣 TRAINING CREATE LAGS - RESULT
  debug: 
    var: output_string.stdout_lines
    verbosity: 1

