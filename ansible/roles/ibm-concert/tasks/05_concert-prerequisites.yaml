
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Install IBM Concert
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

# --------------------------------------------------------------------------------------------------------------------------------------
# Install IBM Concert
# --------------------------------------------------------------------------------------------------------------------------------------

- name: 🛰️  START - INSTALL IBM Concert
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: Log
  shell: |
    export MESSAGE="Installing IBM Concert"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_ibmaiops_feature.kind}}.log
    echo $currentDate" - "$MESSAGE  >> ../install_{{current_ibmaiops_feature.kind}}.log
  ignore_errors: true




# Create aiops-topology-service-account
- name:   🚀 PREREQUISITES - Patch default storage class if non defined
  shell: |
    export default=$(oc get storageclass -oyaml|grep "is-default-class"|wc -l|tr -d " ")
    echo $default
    if [ $default -lt 1 ]; then
        echo "Patching"
        kubectl patch storageclass {{ AIOPS_STORAGE_CLASS_LARGE_BLOCK }} -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
      else
        echo "Patching not needed"
      fi
  ignore_errors: true



- name: 🚀 IBM Concert - Set IBM Concert Password 
  set_fact: current_admin_pass={{current_ibmaiops_feature.IBM Concert_admin_pass  | default( global_config.global_password )}}


- name: 🟣  IBM Concert -  IBM Concert Password {{current_admin_pass}}
  debug:
    var: current_admin_pass
    verbosity: 1






# --------------------------------------------------------------------------------------------------------------------------------------
# Install Podman
# --------------------------------------------------------------------------------------------------------------------------------------
- name: 📣 OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: ibm-aiops-notification
    spec:
      backgroundColor: '#ffd500'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerTop")}}
      text: 'Installing {{current_ibmaiops_feature.kind}} - Install Podman'    
    EOF
  ignore_errors: true
  args:
    executable: /bin/bash
  when: global_config.create_ocp_notifications | default(true) == true  



- name:   🚀 IBM Concert - Installing Podman
  shell: |
    echo "------------------------------------------------------------------------------------------------------------------------------"
    echo " 🚀 Installing Podman"
    echo "------------------------------------------------------------------------------------------------------------------------------"
    apt-get -qq update
    apt-get -y install podman  > /dev/null
  ignore_errors: true



